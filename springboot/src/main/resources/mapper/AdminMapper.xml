<?xml version="1.0" encoding="UTF-8"?>



<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">



<mapper namespace="com.server.cloud.admin.service.AdminMapper">


	<select id="getTotal" resultType="int">
		SELECT COUNT(*) FROM NOTICE
		<where>
			<if test="role!='ROLE_ADMIN'">
				AND (notice_target = #{role} OR notice_target = 'ALL')
			</if>
		</where>
	</select>


	<select id="getList"
		resultType="com.server.cloud.command.NoticeVO">

		select * from NOTICE
		<where>
			<if test="role!='ROLE_ADMIN' and role!=null">
				AND (notice_target=#{role} or notice_target='ALL')
			</if>
		</where>
		order by notice_regdate desc limit
		#{pageStart},#{amount}
	</select>
	<select id="csList" resultType="com.server.cloud.command.CsVO">

		select * from CS
		<where>
			<if test="cs_writer!=null">
				AND (cs_writer=#{cs_writer})
			</if>
		</where>
		order by
		cs_regdate desc
	</select>

	<select id="csEnList" resultType="com.server.cloud.command.CsVO">

		select cs_num,cs_title,cs_content,cs_writer,cs_regdate,cs_answer_yn,cs_type,cs_project,cs_server 
		from (select * from CS c LEFT join PROJECTINFO p on c.cs_project=p.pro_id where team_num=#{eng_team_num}) as eng
		<where> 
			<if test="role=='ROLE_ENGINEER'">
				or cs_server=#{cs_writer}
			</if>
			<if test="role=='ROLE_ENGINEER'">
				or cs_server='ALL'
			</if>
			</where>
		order by
		cs_regdate desc

	</select>
	<select id="csEnLeaderList" resultType="com.server.cloud.command.CsVO">

		select * from CS c LEFT join PROJECTINFO p on c.cs_project=p.pro_id 
		where team_num=#{eng_team_num} or team_num='ALL'
		order by
		cs_regdate desc

	</select>
	<select id="csEnListMy" resultType="com.server.cloud.command.CsVO">
	
	select * from CS where cs_writer=#{cs_writer}
	</select>
	<select id="csEnLeaderListMy" resultType="com.server.cloud.command.CsVO">
	
	select * from CS where cs_writer=#{cs_writer}
	</select>
	<select id="csEnTotal" resultType="int">

		select count(*)
		from (select * from CS c right join PROJECTINFO p on c.cs_project=p.pro_id where team_num=#{eng_team_num}) as eng
		<where> 
			<if test="role=='ROLE_ENGINEER'">
				or cs_server=#{cs_writer}
			</if>
			<if test="role=='ROLE_ENGINEER'">
				or cs_server='ALL'
			</if>
			</where>
	

	</select>

	<select id="csTotal" resultType="int">

		select count(*) from CS;


	</select>
	<select id="csUserTotal" resultType="int">

		select count(*) from CS
		where cs_writer=#{cs_writer}
		;


	</select>
	<!-- 회원관리 - 엔지니어 -->


	<select id="adEngineerList"
		resultType="com.server.cloud.command.EngineerVO">

		select e.*, t.team_id
		from ENGINEER e
		inner join ENG_TEAM t
		on e.team_num = t.team_num
	</select>

	<!-- 회원관리 - 기업 -->
	<select id="adClientList"
		resultType="com.server.cloud.command.CusVO">
		select * from CUSTOMER ;
    </select>

     <insert id="csUpdate">

      insert into CS(cs_num,cs_answer_yn)
      value(#{cs_num},#{cs_answer_yn})
      on duplicate key update
      cs_num=#{cs_num},cs_answer_yn=#{cs_answer_yn}
   </insert>
   <select id="engGetinfo" resultType="com.server.cloud.command.EngineerVO">
   
   select * from ENGINEER where eng_enid=#{cs_writer}
   </select>


   
   
   
   <!-- 프로젝트 리스트 불러오기 -->
   <select id="getProList" resultType="ProjectInfoVO">
      select p.pro_id, p.pro_name, c.cus_company_name, p.pro_rep, p.pro_startdate, p.pro_enddate, p.pro_status, p.pro_pi
      from PROJECTINFO p
      left join CUSTOMER c
      on p.cus_id = c.cus_id
      ORDER BY PRO_ENDDATE DESC;

   </select>
   
   <!-- 프로젝트 디테일 (프로젝트) -->
   <select id="getProListDetail" resultType="ProjectDetailVO">
     select * from PROJECTINFO p 
     left join SERVER s 
     on p.pro_id = s.pro_id
     left join ENGINEER e
     on s.eng_enid = e.eng_enid
     left join ENG_TEAM team
     on e.team_num = team.team_num
     where p.pro_id = #{pro_id}
   </select>
   
   <!-- 서버 점검내역 -->
   <select id="getServerInsList" resultType="WorkInfoVO">
     select s.server_id, s.server_name,
            w.work_date, w.work_division, w.work_time, w.work_cpu, w.work_ram, w.work_hdd, w.work_status, 
            e.eng_name
     from SERVER s
    left join WORKINFO w
    on s.server_id = w.server_id
    left join ENGINEER e
     on w.eng_enid = e.eng_enid
    where s.server_id = #{server_id};
   </select>
   
   

   <select id="newProjectList" resultType="com.server.cloud.command.ProjectCusVO">
      select P.PRO_NAME,
            P.PRO_STARTDATE,
             P.PRO_STATUS,
             P.PRO_ID,
             C.CUS_MANAGET_NAME,
             C.CUS_EMAIL,
             C.CUS_COMPANY_NAME
      from PROJECTINFO P
      left join CUSTOMER C ON P.CUS_ID = C.CUS_ID
      where P.TEAM_NUM is null
      limit 5;
   </select>
   
   <select id ="getRequestServer">
        SELECT S.*,E.ENG_NAME
        FROM SERVER S 
        LEFT JOIN ENGINEER E 
        ON S.ENG_ENID = E.ENG_ENID 
        WHERE S.PRO_ID=#{pro_id}
     </select>
     
     <select id="getRequestDetail">
        SELECT * FROM CUSTOMER C
      LEFT JOIN PROJECTINFO P
      ON C.CUS_ID = P.CUS_ID
      WHERE P.PRO_ID=#{pro_id}
     </select>
     
     <select id="getTeamLeader">
        SELECT ET.TEAM_NUM, ET.TEAM_ID, E.ENG_RANK, E.ENG_NAME
        FROM ENG_TEAM ET
      LEFT JOIN ENGINEER E ON ET.TEAM_NUM = E.TEAM_NUM
      WHERE ENG_RANK = '팀장' ORDER BY ET.TEAM_NUM ASC;
     </select>
     <select id="getTeamMember">
      SELECT ET.TEAM_NUM, ET.TEAM_ID, E.ENG_RANK, E.ENG_NAME 
      FROM ENG_TEAM ET
      LEFT JOIN ENGINEER E ON ET.TEAM_NUM = E.TEAM_NUM
      WHERE ENG_RANK = '팀원';
     </select>
     
     <update id="inputTeamNum">
        UPDATE PROJECTINFO SET TEAM_NUM =#{team_num}, PRO_STATUS = #{pro_status} WHERE PRO_ID = #{pro_id};
     </update>
     

        <select id ="getAdminMain">
     SELECT
          COUNT(DISTINCT C.CUS_ID) AS TOTAL_CUS_ID_COUNT,
          COUNT(DISTINCT P.PRO_NAME) AS TOTAL_PRO_NAME_COUNT,
          COUNT(DISTINCT E.ENG_ENID) AS TOTAL_ENG_ENID_COUNT,
          COUNT(CASE WHEN P.PRO_STATUS = '승인대기중' THEN 1 END) pro_status_waiting_count
      FROM CUSTOMER C
      LEFT JOIN PROJECTINFO P ON C.CUS_ID = P.CUS_ID
      LEFT JOIN ENGINEER E ON P.TEAM_NUM = E.TEAM_NUM;
     </select>
     
          
     <select id="getInspection">
        SELECT
        DATE_FORMAT(DATE_ADD('2023-05-01', INTERVAL n MONTH), '%Y-%m') AS Month,
        SUM(CASE WHEN DATE_FORMAT(PRO_STARTDATE, '%Y-%m') = DATE_FORMAT(DATE_ADD('2023-05-01', INTERVAL n MONTH), '%Y-%m') THEN 1 ELSE 0 END) AS thisMonthStart,
        SUM(CASE WHEN DATE_FORMAT(PRO_ENDDATE, '%Y-%m') = DATE_FORMAT(DATE_ADD('2023-05-01', INTERVAL n MONTH), '%Y-%m') THEN 1 ELSE 0 END) AS thisMonthEnd
        FROM PROJECTINFO
          CROSS JOIN (
             SELECT 0 AS n UNION ALL SELECT 1 UNION ALL SELECT 2 UNION ALL SELECT 3 UNION ALL SELECT 4
          ) numbers
        WHERE <![CDATA[DATE_ADD('2023-05-01', INTERVAL n MONTH) <= '2023-09-30']]>
        GROUP BY MONTH
      ORDER BY MONTH
     </select>
     
     <select id = "getwork">
     SELECT
          SUM(CASE WHEN W.WORK_DIVISION = '정기점검' THEN 1 ELSE 0 END) AS periodic,
          SUM(CASE WHEN W.WORK_DIVISION = '긴급점검' THEN 1 ELSE 0 END) AS emergency,
          SUM(CASE WHEN P.PRO_STATUS = '승인대기중' THEN 1 ELSE 0 END) AS approval,
          SUM(CASE WHEN P.PRO_STATUS = '계약만료' THEN 1 ELSE 0 END) AS complete
      FROM 
          WORKINFO W
      JOIN 
          PROJECTINFO P ON W.PRO_ID = P.PRO_ID;
     </select>
     

</mapper>